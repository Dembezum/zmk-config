#include "aliases.h" //file contains aliases for most symbols for the danish language
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        kp_dk_LBKT: kp_dk_LBKT {
            label = "kp_dk_LBKT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_RBKT: kp_dk_RBKT {
            label = "kp_dk_RBKT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_LBRC: kp_dk_LBRC {
            label = "kp_dk_LBRC";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_RBRC: kp_dk_RBRC {
            label = "kp_dk_RBRC";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_release>,
                <&kp RALT>;
        };

        copy: copy {
            label = "copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        dk_paste: dk_paste {
            label = "dk_paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        del_word: del_word {
            label = "del_word";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        kp_dk_BLSH: kp_dk_BLSH {
            label = "kp_dk_BLSH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp NON_US_BACKSLASH>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_PIPE: kp_dk_PIPE {
            label = "kp_dk_PIPE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_UNDER: kp_dk_UNDER {
            label = "kp_dk_UNDER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp FSLH>,
                <&macro_release>,
                <&kp LSHIFT>;
        };

        mod_left: mod_left {
            label = "mod_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mod_up: mod_up {
            label = "mod_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mod_right: mod_right {
            label = "mod_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mod_down: mod_down {
            label = "mod_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W        &kp E           &kp R              &kp T              &kp Y        &kp U        &kp I                &kp O             &kp P
&ht LEFT_SHIFT A  &kp S        &kp D           &kp F              &kp G              &kp H        &kp J        &lt 3 K              &kp L             &ht RIGHT_SHIFT BACKSLASH
&kp Z             &ht LCTRL X  &ht LEFT_ALT C  &kp V              &kp B              &kp N        &kp M        &ht RIGHT_ALT COMMA  &ht LCTRL PERIOD  &ht RMETA SLASH
                                               &ht LEFT_META TAB  &lt 1 BACKSPACE    &lt 2 SPACE  &lt 3 ENTER
            >;
        };

        L_1 {
            bindings = <
&kp N1   &kp N2    &kp N3  &kp N4    &kp N5      &kp N6          &kp N7          &kp N8          &kp N9        &kp N0
&kp ESC  &mkp MB2  &kp N5  &mkp MB1  &kp BSPC    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&kp ESC  &kp CAPS  &kp N8  &kp N9    &kp END     &msc SCRL_DOWN  &kp C_VOL_DN    &kp LEFT_GUI    &kp C_VOL_UP  &mkp MB3
                           &trans    &kp C_MUTE  &kp DOT         &kp RALT
            >;
        };

        L_2 {
            bindings = <
&kp F1    &kp F2  &kp F3         &kp F4            &kp F5              &kp F6     &kp F7       &kp F8     &kp F11   &kp F12
&kp EXCL  &kp AT  &kp SEMICOLON  &kp SINGLE_QUOTE  &kp LEFT_BRACKET    &kp ASTRK  &kp_dk_PIPE  &kp EQUAL  &kp BSLH  &kp GRAVE
&kp ESC   &trans  &trans         &trans            &kp RGUI            &kp AMPS   &kp UNDER    &kp PLUS   &kp PIPE  &trans
                                 &kp RSHFT         &kp RALT            &trans     &kp LCTRL
            >;
        };

        L_3 {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&soft_off       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };

        L_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &none   &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
