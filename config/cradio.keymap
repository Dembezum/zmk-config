#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10
#include <dt-bindings/zmk/pointing.h>

// Custom imports
#include "aliases.h"
#include "macros.dtsi"
#include "combos.dtsi"

&mmv {
  acceleration-exponent = <2>;
  time-to-max-speed-ms = <350>;
  delay-ms = <0>;
};

/ {

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L_0 {
            bindings = <
                /*╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬───────────────┬───────────────┬───────────────╮     */
                    &kp Q         &kp W         &kp E         &kp R         &kp T           &kp Y         &kp U         &kp I          &kp O        &kp P
                /*├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤           */
                    &ht LSHIFT A  &kp S         &kp D         &kp F         &kp G           &kp H         &kp J         &lt 4 K        &kp L        &ht RSHIFT BACKSLASH
                /*├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤           */
                    &kp Z         &ht LCTRL X   &ht LALT C    &kp V         &kp B           &ht N         &kp M         &ht RALT COMMA &ht LCTRL PERIOD  &ht RMETA SLASH
                /*╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯           */
                                                              &ht LMETA TAB &lt 1 BACKSPACE &lt 2 SPACE   &lt 3 ENTER
                /*                                          ╰─────────────┴─────────────╯ ╰─────────────┴─────────────╯ */
            >;
        };

        L_1 {
            bindings = <
&kp N1      &kp N2    &kp N3  &kp N4    &kp N5      &kp N6          &kp N7          &kp N8          &kp N9        &kp N0
&kp RSHIFT  &mkp MB2  &kp N5  &mkp MB1  &kp BSPC    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&kp ESC     &kp CAPS  &kp N8  &kp N9    &kp END     &msc SCRL_DOWN  &kp C_VOL_DN    &kp LEFT_GUI    &kp C_VOL_UP  &mkp MB3
                              &trans    &kp C_MUTE  &kp DOT         &kp RALT
            >;
        };

        L_2 {
            bindings = <
&kp F1    &kp F2  &kp F3         &kp F4            &kp F5              &kp F6     &kp F7       &kp F8     &kp F11   &kp F12
&kp EXCL  &kp AT  &kp SEMICOLON  &kp SINGLE_QUOTE  &kp LEFT_BRACKET    &kp ASTRK  &kp_dk_PIPE  &kp EQUAL  &kp BSLH  &kp GRAVE
&kp ESC   &trans  &trans         &trans            &kp RGUI            &kp AMPS   &kp UNDER    &kp PLUS   &kp PIPE  &trans
                                 &kp RSHFT         &kp RALT            &trans     &kp LCTRL
            >;
        };

        L_3 {
            bindings = <
&sys_reset   &trans     &kp UP    &trans         &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &kp LEFT   &kp DOWN  &kp RIGHT      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&soft_off    &trans     &trans    &bt BT_CLR     &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans     &trans          &trans  &trans
            >;
        };

        L_4 {
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4            &trans      &trans          &trans      &trans        &trans
&kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &trans                  &trans      &kp DEL         &trans      &trans        &trans
&trans          &trans          &trans          &trans          &trans                  &trans      &trans          &trans      &trans        &trans
                                                &trans          &kp LCTRL               &trans      &trans
            >;
        };
    };
};
